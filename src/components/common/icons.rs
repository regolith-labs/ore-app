use dioxus::prelude::*;

#[component]
pub fn OreIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 216 216",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M0.279729 192.083C-0.0932429 191.71 -0.0932429 191.105 0.279729 190.732L28.4516 162.56C28.7938 162.218 28.8414 161.68 28.5687 161.28C18.1262 145.969 12.0208 127.463 12.0208 107.532C12.0208 54.7824 54.7823 12.0209 107.531 12.0209C127.463 12.0209 145.969 18.1262 161.28 28.569C161.68 28.8417 162.218 28.7941 162.56 28.4519L190.732 0.279816C191.105 -0.0932721 191.71 -0.0932721 192.083 0.279816L215.72 23.9178C216.093 24.2908 216.093 24.8953 215.72 25.2683L187.365 53.6242C187.026 53.9626 186.975 54.493 187.239 54.8921C197.227 69.9845 203.042 88.0792 203.042 107.532C203.042 160.281 160.28 203.042 107.531 203.042C88.0788 203.042 69.9844 197.226 54.8921 187.24C54.4929 186.976 53.9625 187.026 53.6241 187.365L25.2681 215.721C24.8952 216.094 24.2904 216.094 23.9174 215.721L0.279729 192.083ZM107.531 167.703C97.5942 167.703 88.2198 165.294 79.96 161.029C69.2678 155.507 60.4434 146.875 54.6844 136.327C50.0141 127.774 47.3597 117.963 47.3597 107.532C47.3597 74.2996 74.2995 47.3598 107.531 47.3598C117.963 47.3598 127.774 50.0144 136.327 54.6845C146.874 60.4431 155.507 69.2685 161.029 79.9603C165.294 88.2205 167.703 97.5943 167.703 107.532C167.703 140.763 140.763 167.703 107.531 167.703Z"
            }
        }
    }
}

#[component]
pub fn QrCodeIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            fill: "none",
            view_box: "0 0 24 24",
            stroke_width: "1.5",
            stroke: "currentColor",
            class: "{class}",
            path {
                stroke_linecap: "round",
                stroke_linejoin: "round",
                d: "M3.75 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 0 1 3.75 9.375v-4.5ZM3.75 14.625c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5a1.125 1.125 0 0 1-1.125-1.125v-4.5ZM13.5 4.875c0-.621.504-1.125 1.125-1.125h4.5c.621 0 1.125.504 1.125 1.125v4.5c0 .621-.504 1.125-1.125 1.125h-4.5A1.125 1.125 0 0 1 13.5 9.375v-4.5Z"
            }
            path {
                stroke_linecap: "round",
                stroke_linejoin: "round",
                d: "M6.75 6.75h.75v.75h-.75v-.75ZM6.75 16.5h.75v.75h-.75v-.75ZM16.5 6.75h.75v.75h-.75v-.75ZM13.5 13.5h.75v.75h-.75v-.75ZM13.5 19.5h.75v.75h-.75v-.75ZM19.5 13.5h.75v.75h-.75v-.75ZM19.5 19.5h.75v.75h-.75v-.75ZM16.5 16.5h.75v.75h-.75v-.75Z"
            }
        }
    }
}

#[component]
pub fn SearchIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            fill: "currentColor",
            view_box: "0 0 24 24",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M10.5 3.75a6.75 6.75 0 1 0 0 13.5 6.75 6.75 0 0 0 0-13.5ZM2.25 10.5a8.25 8.25 0 1 1 14.59 5.28l4.69 4.69a.75.75 0 1 1-1.06 1.06l-4.69-4.69A8.25 8.25 0 0 1 2.25 10.5Z",
                clip_rule: "evenodd"
            }
        }
    }
}

#[component]
pub fn DownloadIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            stroke: "currentColor",
            view_box: "0 0 24 24",
            class: "{class}",
            path {
                stroke_linecap: "round",
                stroke_linejoin: "round",
                stroke_width: 2,
                d: "M3 16.5v2.25A2.25 2.25 0 0 0 5.25 21h13.5A2.25 2.25 0 0 0 21 18.75V16.5M16.5 12 12 16.5m0 0L7.5 12m4.5 4.5V3"
            }
        }
    }
}

#[component]
pub fn CubeIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "M12.378 1.602a.75.75 0 0 0-.756 0L3 6.632l9 5.25 9-5.25-8.622-5.03ZM21.75 7.93l-9 5.25v9l8.628-5.032a.75.75 0 0 0 .372-.648V7.93ZM11.25 22.18v-9l-9-5.25v8.57a.75.75 0 0 0 .372.648l8.628 5.033Z"
            }
        }
    }
}

#[component]
pub fn CubeTransparentIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M11.622 1.602a.75.75 0 0 1 .756 0l2.25 1.313a.75.75 0 0 1-.756 1.295L12 3.118 10.128 4.21a.75.75 0 1 1-.756-1.295l2.25-1.313ZM5.898 5.81a.75.75 0 0 1-.27 1.025l-1.14.665 1.14.665a.75.75 0 1 1-.756 1.295L3.75 8.806v.944a.75.75 0 0 1-1.5 0V7.5a.75.75 0 0 1 .372-.648l2.25-1.312a.75.75 0 0 1 1.026.27Zm12.204 0a.75.75 0 0 1 1.026-.27l2.25 1.312a.75.75 0 0 1 .372.648v2.25a.75.75 0 0 1-1.5 0v-.944l-1.122.654a.75.75 0 1 1-.756-1.295l1.14-.665-1.14-.665a.75.75 0 0 1-.27-1.025Zm-9 5.25a.75.75 0 0 1 1.026-.27L12 11.882l1.872-1.092a.75.75 0 1 1 .756 1.295l-1.878 1.096V15a.75.75 0 0 1-1.5 0v-1.82l-1.878-1.095a.75.75 0 0 1-.27-1.025ZM3 13.5a.75.75 0 0 1 .75.75v1.82l1.878 1.095a.75.75 0 1 1-.756 1.295l-2.25-1.312a.75.75 0 0 1-.372-.648v-2.25A.75.75 0 0 1 3 13.5Zm18 0a.75.75 0 0 1 .75.75v2.25a.75.75 0 0 1-.372.648l-2.25 1.312a.75.75 0 1 1-.756-1.295l1.878-1.096V14.25a.75.75 0 0 1 .75-.75Zm-9 5.25a.75.75 0 0 1 .75.75v.944l1.122-.654a.75.75 0 1 1 .756 1.295l-2.25 1.313a.75.75 0 0 1-.756 0l-2.25-1.313a.75.75 0 1 1 .756-1.295l1.122.654V19.5a.75.75 0 0 1 .75-.75Z",
                clip_rule: "evenodd"
            }
        }
    }
}

#[component]
pub fn AdjustmentsHorizontalIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            stroke_width: 0,
            path {
                d: "M18.75 12.75h1.5a.75.75 0 0 0 0-1.5h-1.5a.75.75 0 0 0 0 1.5ZM12 6a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 12 6ZM12 18a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 12 18ZM3.75 6.75h1.5a.75.75 0 1 0 0-1.5h-1.5a.75.75 0 0 0 0 1.5ZM5.25 18.75h-1.5a.75.75 0 0 1 0-1.5h1.5a.75.75 0 0 1 0 1.5ZM3 12a.75.75 0 0 1 .75-.75h7.5a.75.75 0 0 1 0 1.5h-7.5A.75.75 0 0 1 3 12ZM9 3.75a2.25 2.25 0 1 0 0 4.5 2.25 2.25 0 0 0 0-4.5ZM12.75 12a2.25 2.25 0 1 1 4.5 0 2.25 2.25 0 0 1-4.5 0ZM9 15.75a2.25 2.25 0 1 0 0 4.5 2.25 2.25 0 0 0 0-4.5Z"
            }
        }
    }
}

#[component]
pub fn PauseIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M6.75 5.25a.75.75 0 0 1 .75-.75H9a.75.75 0 0 1 .75.75v13.5a.75.75 0 0 1-.75.75H7.5a.75.75 0 0 1-.75-.75V5.25Zm7.5 0A.75.75 0 0 1 15 4.5h1.5a.75.75 0 0 1 .75.75v13.5a.75.75 0 0 1-.75.75H15a.75.75 0 0 1-.75-.75V5.25Z",
                clip_rule: "evenodd"
            }
        }
    }
}

#[component]
pub fn PlayIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M4.5 5.653c0-1.427 1.529-2.33 2.779-1.643l11.54 6.347c1.295.712 1.295 2.573 0 3.286L7.28 19.99c-1.25.687-2.779-.217-2.779-1.643V5.653Z",
                clip_rule: "evenodd"
            }
        }
    }
}

#[component]
pub fn StopIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "M6 6h12v12H6z"
            }
        }
    }
}

#[component]
pub fn PlusIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 18 18",
            class: "{class}",
            path {
                d: "M9 1L9 17",
                stroke: "currentColor",
                stroke_width: 3,
                stroke_linecap: "round"
            }
            path {
                d: "M1 9L17 9",
                stroke: "currentColor",
                stroke_width: 3,
                stroke_linecap: "round"
            }
        }
    }
}

#[component]
pub fn SwitchIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 17 16",
            class: "{class}",
            path {
                d: "M5.16667 2.66675L5.16667 13.3334M5.16667 13.3334L2.5 10.6667M5.16667 13.3334L7.83333 10.6667M11.8333 13.3334L11.8333 2.66675M11.8333 2.66675L9.16667 5.33341M11.8333 2.66675L14.5 5.33341",
                stroke: "currentColor",
                stroke_width: 1.5,
                stroke_linecap: "round",
                stroke_linejoin: "round"
            }
        }
    }
}

#[component]
pub fn PlusCircleIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d:"M12 2.25c-5.385 0-9.75 4.365-9.75 9.75s4.365 9.75 9.75 9.75 9.75-4.365 9.75-9.75S17.385 2.25 12 2.25ZM12.75 9a.75.75 0 0 0-1.5 0v2.25H9a.75.75 0 0 0 0 1.5h2.25V15a.75.75 0 0 0 1.5 0v-2.25H15a.75.75 0 0 0 0-1.5h-2.25V9Z"
            }
        }
    }
}

#[component]
pub fn EyeDropperIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M16.098 2.598a3.75 3.75 0 1 1 3.622 6.275l-1.72.46V12a.75.75 0 0 1-.22.53l-.75.75a.75.75 0 0 1-1.06 0l-.97-.97-7.94 7.94a2.56 2.56 0 0 1-1.81.75 1.06 1.06 0 0 0-.75.31l-.97.97a.75.75 0 0 1-1.06 0l-.75-.75a.75.75 0 0 1 0-1.06l.97-.97a1.06 1.06 0 0 0 .31-.75c0-.68.27-1.33.75-1.81L11.69 9l-.97-.97a.75.75 0 0 1 0-1.06l.75-.75A.75.75 0 0 1 12 6h2.666l.461-1.72c.165-.617.49-1.2.971-1.682Zm-3.348 7.463L4.81 18a1.06 1.06 0 0 0-.31.75c0 .318-.06.63-.172.922a2.56 2.56 0 0 1 .922-.172c.281 0 .551-.112.75-.31l7.94-7.94-1.19-1.19Z"
            }
        }
    }
}

#[component]
pub fn InfoIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 16 16",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0ZM9 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM6.75 8a.75.75 0 0 0 0 1.5h.75v1.75a.75.75 0 0 0 1.5 0v-2.5A.75.75 0 0 0 8.25 8h-1.5Z",
            }
        }
    }
}

#[component]
pub fn AlertInfoIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 16 16",
            fill: "#F8BA77",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M15 8A7 7 0 1 1 1 8a7 7 0 0 1 14 0ZM9 5a1 1 0 1 1-2 0 1 1 0 0 1 2 0ZM6.75 8a.75.75 0 0 0 0 1.5h.75v1.75a.75.75 0 0 0 1.5 0v-2.5A.75.75 0 0 0 8.25 8h-1.5Z",
            }
        }
    }
}

#[component]
pub fn AlertWarningIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "#F8BA77",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003ZM12 8.25a.75.75 0 0 1 .75.75v3.75a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75Zm0 8.25a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Z"
            }
        }
    }
}

#[component]
pub fn WarningIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M9.401 3.003c1.155-2 4.043-2 5.197 0l7.355 12.748c1.154 2-.29 4.5-2.599 4.5H4.645c-2.309 0-3.752-2.5-2.598-4.5L9.4 3.003ZM12 8.25a.75.75 0 0 1 .75.75v3.75a.75.75 0 0 1-1.5 0V9a.75.75 0 0 1 .75-.75Zm0 8.25a.75.75 0 1 0 0-1.5.75.75 0 0 0 0 1.5Z"
            }
        }
    }
}

#[component]
pub fn CheckIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z"
            }
        }
    }
}

#[component]
pub fn CheckCircleIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M2.25 12c0-5.385 4.365-9.75 9.75-9.75s9.75 4.365 9.75 9.75-4.365 9.75-9.75 9.75S2.25 17.385 2.25 12Zm13.36-1.814a.75.75 0 1 0-1.22-.872l-3.236 4.53L9.53 12.22a.75.75 0 0 0-1.06 1.06l2.25 2.25a.75.75 0 0 0 1.14-.094l3.75-5.25Z"
            }
        }
    }
}

#[component]
pub fn UserIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M7.5 6a4.5 4.5 0 1 1 9 0 4.5 4.5 0 0 1-9 0ZM3.751 20.105a8.25 8.25 0 0 1 16.498 0 .75.75 0 0 1-.437.695A18.683 18.683 0 0 1 12 22.5c-2.786 0-5.433-.608-7.812-1.7a.75.75 0 0 1-.437-.695Z"
            }
        }
    }
}

#[component]
pub fn DrawerIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 29 38",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M5 33V5H16V33H5ZM0 3C0 1.34315 1.34315 0 3 0H26C27.6569 0 29 1.34315 29 3V35C29 36.6569 27.6569 38 26 38H3C1.34315 38 0 36.6569 0 35V3Z"
            }
        }
    }
}

#[component]
pub fn UserGroupIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M8.25 6.75a3.75 3.75 0 1 1 7.5 0 3.75 3.75 0 0 1-7.5 0ZM15.75 9.75a3 3 0 1 1 6 0 3 3 0 0 1-6 0ZM2.25 9.75a3 3 0 1 1 6 0 3 3 0 0 1-6 0ZM6.31 15.117A6.745 6.745 0 0 1 12 12a6.745 6.745 0 0 1 6.709 7.498.75.75 0 0 1-.372.568A12.696 12.696 0 0 1 12 21.75c-2.305 0-4.47-.612-6.337-1.684a.75.75 0 0 1-.372-.568 6.787 6.787 0 0 1 1.019-4.38Z",
            }
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M5.082 14.254a8.287 8.287 0 0 0-1.308 5.135 9.687 9.687 0 0 1-1.764-.44l-.115-.04a.563.563 0 0 1-.373-.487l-.01-.121a3.75 3.75 0 0 1 3.57-4.047ZM20.226 19.389a8.287 8.287 0 0 0-1.308-5.135 3.75 3.75 0 0 1 3.57 4.047l-.01.121a.563.563 0 0 1-.373.486l-.115.04c-.567.2-1.156.349-1.764.441Z"
            }
        }
    }
}

#[component]
pub fn GlobeIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M21.721 12.752a9.711 9.711 0 0 0-.945-5.003 12.754 12.754 0 0 1-4.339 2.708 18.991 18.991 0 0 1-.214 4.772 17.165 17.165 0 0 0 5.498-2.477ZM14.634 15.55a17.324 17.324 0 0 0 .332-4.647c-.952.227-1.945.347-2.966.347-1.021 0-2.014-.12-2.966-.347a17.515 17.515 0 0 0 .332 4.647 17.385 17.385 0 0 0 5.268 0ZM9.772 17.119a18.963 18.963 0 0 0 4.456 0A17.182 17.182 0 0 1 12 21.724a17.18 17.18 0 0 1-2.228-4.605ZM7.777 15.23a18.87 18.87 0 0 1-.214-4.774 12.753 12.753 0 0 1-4.34-2.708 9.711 9.711 0 0 0-.944 5.004 17.165 17.165 0 0 0 5.498 2.477ZM21.356 14.752a9.765 9.765 0 0 1-7.478 6.817 18.64 18.64 0 0 0 1.988-4.718 18.627 18.627 0 0 0 5.49-2.098ZM2.644 14.752c1.682.971 3.53 1.688 5.49 2.099a18.64 18.64 0 0 0 1.988 4.718 9.765 9.765 0 0 1-7.478-6.816ZM13.878 2.43a9.755 9.755 0 0 1 6.116 3.986 11.267 11.267 0 0 1-3.746 2.504 18.63 18.63 0 0 0-2.37-6.49ZM12 2.276a17.152 17.152 0 0 1 2.805 7.121c-.897.23-1.837.353-2.805.353-.968 0-1.908-.122-2.805-.353A17.151 17.151 0 0 1 12 2.276ZM10.122 2.43a18.629 18.629 0 0 0-2.37 6.49 11.266 11.266 0 0 1-3.746-2.504 9.754 9.754 0 0 1 6.116-3.985Z"
            }
        }
    }
}

#[component]
pub fn SquareStackIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "M11.644 1.59a.75.75 0 0 1 .712 0l9.75 5.25a.75.75 0 0 1 0 1.32l-9.75 5.25a.75.75 0 0 1-.712 0l-9.75-5.25a.75.75 0 0 1 0-1.32l9.75-5.25Z"
            }
            path {
                d: "m3.265 10.602 7.668 4.129a2.25 2.25 0 0 0 2.134 0l7.668-4.13 1.37.739a.75.75 0 0 1 0 1.32l-9.75 5.25a.75.75 0 0 1-.71 0l-9.75-5.25a.75.75 0 0 1 0-1.32l1.37-.738Z"
            }
            path {
                d: "m10.933 19.231-7.668-4.13-1.37.739a.75.75 0 0 0 0 1.32l9.75 5.25c.221.12.489.12.71 0l9.75-5.25a.75.75 0 0 0 0-1.32l-1.37-.738-7.668 4.13a2.25 2.25 0 0 1-2.134-.001Z"
            }
        }
    }
}

#[component]
pub fn CircleStackIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                d:"M21 6.375c0 2.692-4.03 4.875-9 4.875S3 9.067 3 6.375 7.03 1.5 12 1.5s9 2.183 9 4.875Z"
            }
            path {
                d:"M12 12.75c2.685 0 5.19-.586 7.078-1.609a8.283 8.283 0 0 0 1.897-1.384c.016.121.025.244.025.368C21 12.817 16.97 15 12 15s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.285 8.285 0 0 0 1.897 1.384C6.809 12.164 9.315 12.75 12 12.75Z"
            }
            path {
                d:"M12 16.5c2.685 0 5.19-.586 7.078-1.609a8.282 8.282 0 0 0 1.897-1.384c.016.121.025.244.025.368 0 2.692-4.03 4.875-9 4.875s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.284 8.284 0 0 0 1.897 1.384C6.809 15.914 9.315 16.5 12 16.5Z"
            }
            path {
                d:"M12 20.25c2.685 0 5.19-.586 7.078-1.609a8.282 8.282 0 0 0 1.897-1.384c.016.121.025.244.025.368 0 2.692-4.03 4.875-9 4.875s-9-2.183-9-4.875c0-.124.009-.247.025-.368a8.284 8.284 0 0 0 1.897 1.384C6.809 19.664 9.315 20.25 12 20.25Z"
            }
        }
    }
}

#[component]
pub fn ScaleIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d:"M12 2.25a.75.75 0 0 1 .75.75v.756a49.106 49.106 0 0 1 9.152 1 .75.75 0 0 1-.152 1.485h-1.918l2.474 10.124a.75.75 0 0 1-.375.84A6.723 6.723 0 0 1 18.75 18a6.723 6.723 0 0 1-3.181-.795.75.75 0 0 1-.375-.84l2.474-10.124H12.75v13.28c1.293.076 2.534.343 3.697.776a.75.75 0 0 1-.262 1.453h-8.37a.75.75 0 0 1-.262-1.453c1.162-.433 2.404-.7 3.697-.775V6.24H6.332l2.474 10.124a.75.75 0 0 1-.375.84A6.723 6.723 0 0 1 5.25 18a6.723 6.723 0 0 1-3.181-.795.75.75 0 0 1-.375-.84L4.168 6.241H2.25a.75.75 0 0 1-.152-1.485 49.105 49.105 0 0 1 9.152-1V3a.75.75 0 0 1 .75-.75Zm4.878 13.543 1.872-7.662 1.872 7.662h-3.744Zm-9.756 0L5.25 8.131l-1.872 7.662h3.744Z"
            }
        }
    }
}

#[component]
pub fn BeakerIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d:"M10.5 3.798v5.02a3 3 0 0 1-.879 2.121l-2.377 2.377a9.845 9.845 0 0 1 5.091 1.013 8.315 8.315 0 0 0 5.713.636l.285-.071-3.954-3.955a3 3 0 0 1-.879-2.121v-5.02a23.614 23.614 0 0 0-3 0Zm4.5.138a.75.75 0 0 0 .093-1.495A24.837 24.837 0 0 0 12 2.25a25.048 25.048 0 0 0-3.093.191A.75.75 0 0 0 9 3.936v4.882a1.5 1.5 0 0 1-.44 1.06l-6.293 6.294c-1.62 1.621-.903 4.475 1.471 4.88 2.686.46 5.447.698 8.262.698 2.816 0 5.576-.239 8.262-.697 2.373-.406 3.092-3.26 1.47-4.881L15.44 9.879A1.5 1.5 0 0 1 15 8.818V3.936Z"
            }
        }
    }
}

#[component]
pub fn CarrotDownIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 12 7",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M11.3535 1.35378L6.35354 6.35378C6.3071 6.40027 6.25196 6.43715 6.19126 6.46231C6.13056 6.48748 6.0655 6.50043 5.99979 6.50043C5.93408 6.50043 5.86902 6.48748 5.80832 6.46231C5.74762 6.43715 5.69248 6.40027 5.64604 6.35378L0.64604 1.35378C0.552219 1.25996 0.499512 1.13272 0.499512 1.00003C0.499512 0.867352 0.552219 0.740104 0.64604 0.646284C0.73986 0.552463 0.867108 0.499756 0.99979 0.499756C1.13247 0.499756 1.25972 0.552463 1.35354 0.646284L5.99979 5.29316L10.646 0.646284C10.6925 0.599829 10.7476 0.562978 10.8083 0.537837C10.869 0.512696 10.9341 0.499756 10.9998 0.499756C11.0655 0.499756 11.1305 0.512696 11.1912 0.537837C11.2519 0.562978 11.3071 0.599829 11.3535 0.646284C11.4 0.692739 11.4368 0.747889 11.462 0.808586C11.4871 0.869282 11.5001 0.934336 11.5001 1.00003C11.5001 1.06573 11.4871 1.13079 11.462 1.19148C11.4368 1.25218 11.4 1.30733 11.3535 1.35378Z"
            }
        }
    }
}

#[component]
pub fn CarrotRightIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 12 12",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M8.64798 6.39795L4.89798 10.1479C4.79231 10.2536 4.64898 10.313 4.49954 10.313C4.3501 10.313 4.20678 10.2536 4.1011 10.1479C3.99543 10.0423 3.93607 9.89896 3.93607 9.74951C3.93607 9.60007 3.99543 9.45675 4.1011 9.35107L7.45314 5.99998L4.10204 2.64795C4.04972 2.59563 4.00821 2.53351 3.9799 2.46514C3.95158 2.39678 3.937 2.32351 3.937 2.24951C3.937 2.17551 3.95158 2.10224 3.9799 2.03388C4.00821 1.96551 4.04972 1.9034 4.10204 1.85107C4.15437 1.79875 4.21648 1.75724 4.28485 1.72893C4.35321 1.70061 4.42648 1.68604 4.50048 1.68604C4.57448 1.68604 4.64775 1.70061 4.71611 1.72893C4.78448 1.75724 4.84659 1.79875 4.89892 1.85107L8.64892 5.60107C8.70129 5.65339 8.74283 5.71554 8.77114 5.78395C8.79945 5.85235 8.81398 5.92567 8.81389 5.99971C8.8138 6.07374 8.7991 6.14703 8.77063 6.21537C8.74216 6.28371 8.70048 6.34575 8.64798 6.39795Z" ,
            }
        }
    }
}

#[component]
pub fn BoltIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M14.615 1.595a.75.75 0 0 1 .359.852L12.982 9.75h7.268a.75.75 0 0 1 .548 1.262l-10.5 11.25a.75.75 0 0 1-1.272-.71l1.992-7.302H3.75a.75.75 0 0 1-.548-1.262l10.5-11.25a.75.75 0 0 1 .913-.143Z"
            }
        }
    }
}

#[component]
pub fn PieChartIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M2.25 13.5a8.25 8.25 0 0 1 8.25-8.25.75.75 0 0 1 .75.75v6.75H18a.75.75 0 0 1 .75.75 8.25 8.25 0 0 1-16.5 0Z"
            }
            path {
                fill_rule: "evenodd",
                d: "M12.75 3a.75.75 0 0 1 .75-.75 8.25 8.25 0 0 1 8.25 8.25.75.75 0 0 1-.75.75h-7.5a.75.75 0 0 1-.75-.75V3Z"
            }
        }
    }
}

#[component]
pub fn WalletIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            stroke: "currentColor",
            fill: "none",
            stroke_width: "1.5",
            class: "{class}",
            path {
                stroke_linecap: "round",
                stroke_linejoin: "round",
                d: "M21 12a2.25 2.25 0 0 0-2.25-2.25H15a3 3 0 1 1-6 0H5.25A2.25 2.25 0 0 0 3 12m18 0v6a2.25 2.25 0 0 1-2.25 2.25H5.25A2.25 2.25 0 0 1 3 18v-6m18 0V9M3 12V9m18 0a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 9m18 0V6a2.25 2.25 0 0 0-2.25-2.25H5.25A2.25 2.25 0 0 0 3 6v3"
            }
        }
    }
}

#[component]
pub fn SwapIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 17 16",
            class: "{class} rotate-45",
            path {
                stroke: "currentColor",
                d: "M5.16667 2.6665L5.16667 13.3332M5.16667 13.3332L2.5 10.6665M5.16667 13.3332L7.83333 10.6665M11.8333 13.3332L11.8333 2.6665M11.8333 2.6665L9.16667 5.33317M11.8333 2.6665L14.5 5.33317",
                stroke_width: 2,
                stroke_linecap:"round",
                stroke_linejoin:"round"
            }
        }
    }
}

#[component]
pub fn PaperAirplaneIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M3.478 2.404a.75.75 0 0 0-.926.941l2.432 7.905H13.5a.75.75 0 0 1 0 1.5H4.984l-2.432 7.905a.75.75 0 0 0 .926.94 60.519 60.519 0 0 0 18.445-8.986.75.75 0 0 0 0-1.218A60.517 60.517 0 0 0 3.478 2.404Z"
            }
        }
    }
}

#[component]
pub fn CopyIcon(class: Option<String>, solid: bool) -> Element {
    let class = class.unwrap_or("".to_string());
    if solid {
        rsx! {
            svg {
                view_box: "0 0 24 24",
                fill: "currentColor",
                class: "{class}",
                path {
                    fill_rule: "evenodd",
                    d: "M7.5 3.375c0-1.036.84-1.875 1.875-1.875h.375a3.75 3.75 0 0 1 3.75 3.75v1.875C13.5 8.161 14.34 9 15.375 9h1.875A3.75 3.75 0 0 1 21 12.75v3.375C21 17.16 20.16 18 19.125 18h-9.75A1.875 1.875 0 0 1 7.5 16.125V3.375Z",
                }
                path {
                    fill_rule: "evenodd",
                    d: "M15 5.25a5.23 5.23 0 0 0-1.279-3.434 9.768 9.768 0 0 1 6.963 6.963A5.23 5.23 0 0 0 17.25 7.5h-1.875A.375.375 0 0 1 15 7.125V5.25ZM4.875 6H6v10.125A3.375 3.375 0 0 0 9.375 19.5H16.5v1.125c0 1.035-.84 1.875-1.875 1.875h-9.75A1.875 1.875 0 0 1 3 20.625V7.875C3 6.839 3.84 6 4.875 6Z",
                }
            }
        }
    } else {
        rsx! {
            svg {
                fill: "none",
                view_box: "0 0 24 24",
                stroke_width: "2",
                stroke: "currentColor",
                class: "{class}",
                path {
                    stroke_linecap: "round",
                    stroke_linejoin: "round",
                    d: "M15.75 17.25v3.375c0 .621-.504 1.125-1.125 1.125h-9.75a1.125 1.125 0 0 1-1.125-1.125V7.875c0-.621.504-1.125 1.125-1.125H6.75a9.06 9.06 0 0 1 1.5.124m7.5 10.376h3.375c.621 0 1.125-.504 1.125-1.125V11.25c0-4.46-3.243-8.161-7.5-8.876a9.06 9.06 0 0 0-1.5-.124H9.375c-.621 0-1.125.504-1.125 1.125v3.5m7.5 10.375H9.375a1.125 1.125 0 0 1-1.125-1.125v-9.25m12 6.625v-1.875a3.375 3.375 0 0 0-3.375-3.375h-1.5a1.125 1.125 0 0 1-1.125-1.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H9.75",
                }
            }
        }
    }
}

#[component]
pub fn ChartIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M18.375 2.25c-1.035 0-1.875.84-1.875 1.875v15.75c0 1.035.84 1.875 1.875 1.875h.75c1.035 0 1.875-.84 1.875-1.875V4.125c0-1.036-.84-1.875-1.875-1.875h-.75ZM9.75 8.625c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v11.25c0 1.035-.84 1.875-1.875 1.875h-.75a1.875 1.875 0 0 1-1.875-1.875V8.625ZM3 13.125c0-1.036.84-1.875 1.875-1.875h.75c1.036 0 1.875.84 1.875 1.875v6.75c0 1.035-.84 1.875-1.875 1.875h-.75A1.875 1.875 0 0 1 3 19.875v-6.75Z"
            }
        }
    }
}

#[component]
pub fn GithubIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 1024 1024",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                transform: "scale(64)",
                d: "M8 0C3.58 0 0 3.58 0 8C0 11.54 2.29 14.53 5.47 15.59C5.87 15.66 6.02 15.42 6.02 15.21C6.02 15.02 6.01 14.39 6.01 13.72C4 14.09 3.48 13.23 3.32 12.78C3.23 12.55 2.84 11.84 2.5 11.65C2.22 11.5 1.82 11.13 2.49 11.12C3.12 11.11 3.57 11.7 3.72 11.94C4.44 13.15 5.59 12.81 6.05 12.6C6.12 12.08 6.33 11.73 6.56 11.53C4.78 11.33 2.92 10.64 2.92 7.58C2.92 6.71 3.23 5.99 3.74 5.43C3.66 5.23 3.38 4.41 3.82 3.31C3.82 3.31 4.49 3.1 6.02 4.13C6.66 3.95 7.34 3.86 8.02 3.86C8.7 3.86 9.38 3.95 10.02 4.13C11.55 3.09 12.22 3.31 12.22 3.31C12.66 4.41 12.38 5.23 12.3 5.43C12.81 5.99 13.12 6.7 13.12 7.58C13.12 10.65 11.25 11.33 9.47 11.53C9.76 11.78 10.01 12.26 10.01 13.01C10.01 14.08 10 14.94 10 15.21C10 15.42 10.15 15.67 10.55 15.59C13.71 14.53 16 11.53 16 8C16 3.58 12.42 0 8 0Z",
            }
        }
    }
}

#[component(no_case_check)]
pub fn XIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 300 271",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "m236 0h46l-101 115 118 156h-92.6l-72.5-94.8-83 94.8h-46l107-123-113-148h94.9l65.5 86.6zm-16.1 244h25.5l-165-218h-27.4z"
                // d: "M178.57 127.15 290.27 0h-26.46l-97.03 110.38L89.34 0H0l117.13 166.93L0 300.25h26.46l102.4-116.59 81.8 116.59h89.34M36.01 19.54H76.66l187.13 262.13h-40.66"
            }
        }
    }
}

#[component]
pub fn OreWordmarkIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 120 24",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "M32.3192 22H8.73312C7.79376 22 6.90545 21.8426 6.0682 21.5278C5.25136 21.1944 4.52642 20.75 3.89338 20.1944C3.28075 19.6204 2.79065 18.963 2.42308 18.2222C2.07592 17.463 1.90234 16.6574 1.90234 15.8056V8.19444C1.90234 7.34259 2.07592 6.5463 2.42308 5.80556C2.79065 5.0463 3.28075 4.38889 3.89338 3.83333C4.52642 3.25926 5.25136 2.81481 6.0682 2.5C6.90545 2.16667 7.79376 2 8.73312 2H32.3192C33.2586 2 34.1367 2.16667 34.9535 2.5C35.7907 2.81481 36.5157 3.25926 37.1283 3.83333C37.7613 4.38889 38.2514 5.0463 38.5986 5.80556C38.9662 6.5463 39.15 7.34259 39.15 8.19444V15.8056C39.15 16.6574 38.9662 17.463 38.5986 18.2222C38.2514 18.963 37.7613 19.6204 37.1283 20.1944C36.5157 20.75 35.7907 21.1944 34.9535 21.5278C34.1367 21.8426 33.2586 22 32.3192 22ZM33.3607 13.9167V10.0833C33.3607 9.69444 33.279 9.33333 33.1156 9C32.9727 8.64815 32.7582 8.34259 32.4724 8.08333C32.2069 7.82407 31.8801 7.62037 31.4921 7.47222C31.1246 7.32407 30.7162 7.25 30.2669 7.25H10.8467C9.94816 7.25 9.19259 7.51852 8.57996 8.05556C7.98776 8.59259 7.69165 9.26852 7.69165 10.0833V13.9167C7.69165 14.3056 7.76313 14.6759 7.90607 15.0278C8.06944 15.3611 8.28386 15.6574 8.54933 15.9167C8.83522 16.1759 9.17217 16.3796 9.56016 16.5278C9.94816 16.6759 10.3668 16.75 10.816 16.75H30.2056C31.1246 16.75 31.8801 16.4722 32.4724 15.9167C33.0646 15.3611 33.3607 14.6944 33.3607 13.9167Z"
            }
            path {
                d: "M78.7146 22H71.6387L67.2585 16.2222H47.7157V22H41.9264V2H72.2207C73.1805 2 74.0688 2.15741 74.8857 2.47222C75.7229 2.78704 76.4478 3.2037 77.0605 3.72222C77.6935 4.24074 78.1836 4.84259 78.5308 5.52778C78.8983 6.19444 79.0821 6.87963 79.0821 7.58333V10.5C79.0821 11.0926 78.9392 11.6944 78.6533 12.3056C78.3878 12.9167 78.0202 13.4815 77.5506 14C77.1013 14.5185 76.5704 14.963 75.9577 15.3333C75.3655 15.6852 74.7529 15.9167 74.1199 16.0278L78.7146 22ZM73.2928 9.25V8.86111C73.2928 8.43519 73.0886 8.06482 72.6802 7.75C72.2718 7.41667 71.7102 7.25 70.9955 7.25H47.7157V10.9722H70.9955C71.7715 10.9722 72.3433 10.7963 72.7108 10.4444C73.0988 10.0926 73.2928 9.69444 73.2928 9.25Z"
            }
            path {
                d: "M81.8607 2H118.098V7.25H87.65V9.38889H117.362V14.6111H87.65V16.75H118.098V22H81.8607V2Z"
            }
        }
    }
}

#[component]
pub fn TreasuryIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "M11.584 2.376a.75.75 0 0 1 .832 0l9 6a.75.75 0 1 1-.832 1.248L12 3.901 3.416 9.624a.75.75 0 0 1-.832-1.248l9-6Z"
            }
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M20.25 10.332v9.918H21a.75.75 0 0 1 0 1.5H3a.75.75 0 0 1 0-1.5h.75v-9.918a.75.75 0 0 1 .634-.74A49.109 49.109 0 0 1 12 9c2.59 0 5.134.202 7.616.592a.75.75 0 0 1 .634.74Zm-7.5 2.418a.75.75 0 0 0-1.5 0v6.75a.75.75 0 0 0 1.5 0v-6.75Zm3-.75a.75.75 0 0 1 .75.75v6.75a.75.75 0 0 1-1.5 0v-6.75a.75.75 0 0 1 .75-.75ZM9 12.75a.75.75 0 0 0-1.5 0v6.75a.75.75 0 0 0 1.5 0v-6.75Z"
            }
            path {
                d: "M12 7.875a1.125 1.125 0 1 0 0-2.25 1.125 1.125 0 0 0 0 2.25Z"
            }
        }
    }
}

#[component]
pub fn BusIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                d: "M3.375 4.5C2.339 4.5 1.5 5.34 1.5 6.375V13.5h12V6.375c0-1.036-.84-1.875-1.875-1.875h-8.25ZM13.5 15h-12v2.625c0 1.035.84 1.875 1.875 1.875h.375a3 3 0 1 1 6 0h3a.75.75 0 0 0 .75-.75V15Z"
            }
            path {
                d: "M8.25 19.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0ZM15.75 6.75a.75.75 0 0 0-.75.75v11.25c0 .087.015.17.042.248a3 3 0 0 1 5.958.464c.853-.175 1.522-.935 1.464-1.883a18.659 18.659 0 0 0-3.732-10.104 1.837 1.837 0 0 0-1.47-.725H15.75Z"
            }
            path {
                d: "M19.5 19.5a1.5 1.5 0 1 0-3 0 1.5 1.5 0 0 0 3 0Z"
            }
        }
    }
}

#[component]
pub fn LockOpenIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M18 1.5c2.9 0 5.25 2.35 5.25 5.25v3.75a.75.75 0 0 1-1.5 0V6.75a3.75 3.75 0 1 0-7.5 0v3a3 3 0 0 1 3 3v6.75a3 3 0 0 1-3 3H3.75a3 3 0 0 1-3-3v-6.75a3 3 0 0 1 3-3h9v-3c0-2.9 2.35-5.25 5.25-5.25Z"
            }
        }
    }
}

#[component]
pub fn ChatButtonRightLeftIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M4.913 2.658c2.075-.27 4.19-.408 6.337-.408 2.147 0 4.262.139 6.337.408 1.922.25 3.291 1.861 3.405 3.727a4.403 4.403 0 0 0-1.032-.211 50.89 50.89 0 0 0-8.42 0c-2.358.196-4.04 2.19-4.04 4.434v4.286a4.47 4.47 0 0 0 2.433 3.984L7.28 21.53A.75.75 0 0 1 6 21v-4.03a48.527 48.527 0 0 1-1.087-.128C2.905 16.58 1.5 14.833 1.5 12.862V6.638c0-1.97 1.405-3.718 3.413-3.979Z"
            }
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M15.75 7.5c-1.376 0-2.739.057-4.086.169C10.124 7.797 9 9.103 9 10.609v4.285c0 1.507 1.128 2.814 2.67 2.94 1.243.102 2.5.157 3.768.165l2.782 2.781a.75.75 0 0 0 1.28-.53v-2.39l.33-.026c1.542-.125 2.67-1.433 2.67-2.94v-4.286c0-1.505-1.125-2.811-2.664-2.94A49.392 49.392 0 0 0 15.75 7.5Z"
            }
        }
    }
}

#[component]
pub fn FlagIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M3 2.25a.75.75 0 0 1 .75.75v.54l1.838-.46a9.75 9.75 0 0 1 6.725.738l.108.054A8.25 8.25 0 0 0 18 4.524l3.11-.732a.75.75 0 0 1 .917.81 47.784 47.784 0 0 0 .005 10.337.75.75 0 0 1-.574.812l-3.114.733a9.75 9.75 0 0 1-6.594-.77l-.108-.054a8.25 8.25 0 0 0-5.69-.625l-2.202.55V21a.75.75 0 0 1-1.5 0V3A.75.75 0 0 1 3 2.25Z"
            }
        }
    }
}

#[component]
pub fn EyeSlashIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M3.53 2.47a.75.75 0 0 0-1.06 1.06l18 18a.75.75 0 1 0 1.06-1.06l-18-18ZM22.676 12.553a11.249 11.249 0 0 1-2.631 4.31l-3.099-3.099a5.25 5.25 0 0 0-6.71-6.71L7.759 4.577a11.217 11.217 0 0 1 4.242-.827c4.97 0 9.185 3.223 10.675 7.69.12.362.12.752 0 1.113Z"
            }
            path {
                d: "M15.75 12c0 .18-.013.357-.037.53l-4.244-4.243A3.75 3.75 0 0 1 15.75 12ZM12.53 15.713l-4.243-4.244a3.75 3.75 0 0 0 4.244 4.243Z"
            }
            path {
                d: "M6.75 12c0-.619.107-1.213.304-1.764l-3.1-3.1a11.25 11.25 0 0 0-2.63 4.31c-.12.362-.12.752 0 1.114 1.489 4.467 5.704 7.69 10.675 7.69 1.5 0 2.933-.294 4.242-.827l-2.477-2.477A5.25 5.25 0 0 1 6.75 12Z"
            }
        }
    }
}

#[component]
pub fn RefreshIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M4.755 10.059a7.5 7.5 0 0 1 12.548-3.364l1.903 1.903h-3.183a.75.75 0 1 0 0 1.5h4.992a.75.75 0 0 0 .75-.75V4.356a.75.75 0 0 0-1.5 0v3.18l-1.9-1.9A9 9 0 0 0 3.306 9.67a.75.75 0 1 0 1.45.388Zm15.408 3.352a.75.75 0 0 0-.919.53 7.5 7.5 0 0 1-12.548 3.364l-1.902-1.903h3.183a.75.75 0 0 0 0-1.5H2.984a.75.75 0 0 0-.75.75v4.992a.75.75 0 0 0 1.5 0v-3.18l1.9 1.9a9 9 0 0 0 15.059-4.035.75.75 0 0 0-.53-.918Z"
            }
        }
    }
}

#[component]
pub fn DiscordIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 -28.5 256 256",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "nonzero",
                d: "M216.856339,16.5966031 C200.285002,8.84328665 182.566144,3.2084988 164.041564,0 C161.766523,4.11318106 159.108624,9.64549908 157.276099,14.0464379 C137.583995,11.0849896 118.072967,11.0849896 98.7430163,14.0464379 C96.9108417,9.64549908 94.1925838,4.11318106 91.8971895,0 C73.3526068,3.2084988 55.6133949,8.86399117 39.0420583,16.6376612 C5.61752293,67.146514 -3.4433191,116.400813 1.08711069,164.955721 C23.2560196,181.510915 44.7403634,191.567697 65.8621325,198.148576 C71.0772151,190.971126 75.7283628,183.341335 79.7352139,175.300261 C72.104019,172.400575 64.7949724,168.822202 57.8887866,164.667963 C59.7209612,163.310589 61.5131304,161.891452 63.2445898,160.431257 C105.36741,180.133187 151.134928,180.133187 192.754523,160.431257 C194.506336,161.891452 196.298154,163.310589 198.110326,164.667963 C191.183787,168.842556 183.854737,172.420929 176.223542,175.320965 C180.230393,183.341335 184.861538,190.991831 190.096624,198.16893 C211.238746,191.588051 232.743023,181.531619 254.911949,164.955721 C260.227747,108.668201 245.831087,59.8662432 216.856339,16.5966031 Z M85.4738752,135.09489 C72.8290281,135.09489 62.4592217,123.290155 62.4592217,108.914901 C62.4592217,94.5396472 72.607595,82.7145587 85.4738752,82.7145587 C98.3405064,82.7145587 108.709962,94.5189427 108.488529,108.914901 C108.508531,123.290155 98.3405064,135.09489 85.4738752,135.09489 Z M170.525237,135.09489 C157.88039,135.09489 147.510584,123.290155 147.510584,108.914901 C147.510584,94.5396472 157.658606,82.7145587 170.525237,82.7145587 C183.391518,82.7145587 193.761324,94.5189427 193.539891,108.914901 C193.539891,123.290155 183.391518,135.09489 170.525237,135.09489 Z"
            }
        }
    }
}

#[component]
pub fn OttersecIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 23 23",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                d: "M16.509 20.7386C17.9619 20.1581 19.2679 19.2817 20.3377 18.1696C22.0596 16.3866 22.968 13.5267 22.968 13.5267C22.9383 13.8305 22.8908 14.1325 22.8256 14.4311C22.7319 14.8798 22.608 15.3221 22.4548 15.7552C22.2907 16.2401 22.0979 16.7155 21.8774 17.179C21.6203 17.7287 21.3163 18.2567 20.9683 18.7576C20.1403 19.8811 19.0887 20.8342 17.8748 21.5612C17.0299 22.031 16.1275 22.3972 15.1887 22.6514C12.3197 23.3924 6.14484 23.2148 2.46433 18.7297C-0.214746 15.4637 -0.0267768 11.7976 0.0226226 11.0969C0.05919 10.5751 0.406265 6.57916 3.84816 3.54337C4.85459 2.65826 6.01093 1.94634 7.2669 1.43861C7.26447 1.1033 7.38569 0.778075 7.60895 0.521103C7.8322 0.264137 8.14293 0.0921773 8.48549 0.0359769C8.82813 -0.0202235 9.18022 0.0429988 9.47898 0.214341C9.77765 0.385687 10.0035 0.653972 10.116 0.97123C10.9653 0.909327 11.6256 0.90561 11.9553 0.934711C12.1503 0.951418 12.3762 0.978656 12.3762 0.978656C12.8064 1.02327 13.231 1.10894 13.6438 1.23432C14.1611 1.37223 14.6547 1.58226 15.1091 1.8577C15.7904 2.28238 15.8725 2.59621 16.8137 3.16326C16.9151 3.22454 16.9991 3.27221 17.053 3.30195L17.4212 3.40716C17.5996 3.45794 17.6945 3.48395 17.776 3.50683C17.9293 3.55018 18.1474 3.61331 18.4214 3.69937C18.3553 3.82687 18.2995 3.93335 18.2585 4.00887C18.1751 4.16486 18.1109 4.28066 18.1109 4.28498C17.8107 4.84641 17.366 5.3239 16.8195 5.67166C16.2729 6.01941 14.424 5.79604 13.6438 5.67166C12.8637 5.54727 10.413 4.89967 8.07655 6.42502C5.26528 8.26046 5.31725 11.5692 5.33523 12.0583C5.35064 12.4904 5.49498 15.1752 7.8321 17.0162C9.55205 18.3707 11.4472 18.4573 12.1215 18.479C12.6309 18.4951 14.6908 18.5112 16.6764 17.179C17.5722 16.583 18.3177 15.8002 18.8577 14.8885C19.3615 14.0149 19.647 13.0399 19.6917 12.041C19.7133 11.3267 19.6047 10.6143 19.3709 9.93621C19.1399 9.34406 18.8323 8.78253 18.4554 8.26479C19.2509 10.6791 18.5196 12.66 18.5196 12.66C18.313 13.219 18.0429 13.9191 17.3847 14.6174C16.5308 15.5224 15.3529 15.9558 14.9122 16.1137C14.5749 16.2317 14.2299 16.3279 13.8793 16.4015C13.6095 16.4546 13.4043 16.477 13.1222 16.5078L13.1095 16.5092C12.8327 16.5417 12.5541 16.5563 12.2755 16.5532C12.2755 16.5532 12.8022 16.4541 13.3071 16.3273C14.3199 16.0644 15.2542 15.5749 16.0342 14.8985C16.4487 14.5339 17.1095 13.9383 17.4899 12.9479C17.7358 12.3077 17.7612 11.7724 17.7843 11.2847L17.7844 11.282C17.8172 10.5077 17.7263 9.73307 17.5149 8.98533C17.3236 8.30469 17.0361 7.65269 16.6604 7.04777L17.0658 7.08864C17.694 7.17174 18.3155 7.29585 18.9263 7.46005C19.5929 7.63956 20.1144 7.78443 20.7226 8.14102C20.9991 8.30318 21.2743 8.46476 21.5567 8.75999C22.0757 9.30416 22.2386 9.90465 22.3264 10.2458C22.6049 11.3248 22.3765 12.2329 22.1981 12.9077C21.9108 13.9941 21.4399 14.7412 21.1076 15.26C20.6268 16.0122 20.0443 16.6992 19.3754 17.3028C17.7337 18.7737 15.9047 19.3704 14.8526 19.6243C13.4283 19.9991 11.9332 20.0488 10.4856 19.7694C9.03799 19.49 7.67774 18.8893 6.51248 18.0147C4.92141 16.9004 4.15028 15.6512 3.80001 14.9722C2.7389 12.9157 2.81333 10.8041 2.85886 9.80563C2.87236 9.51649 2.88778 9.34015 2.88778 9.31718C2.5785 10.3429 2.08713 12.5369 2.88067 15.0607C3.09239 15.7348 3.56135 17.171 4.87654 18.5421C6.37968 20.109 8.10092 20.6636 9.04659 20.9564C10.1327 21.2926 13.164 22.0491 16.509 20.7386Z"
            }
        }
    }
}

#[component]
pub fn FuzzlandIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 1581.98 1665.76",
            fill: "currentColor",
            class: "{class}",
            polygon {
                points: "741.82 0 54.22 299.32 396.84 505.25 741.82 355.08 741.82 0"
            }
            polygon {
                points: "840.15 0 840.15 355.08 1185.13 505.25 1527.76 299.32 840.15 0"
            }
            path {
                d: "M1240.07,586.96c-8.44,283.2-158.75,543.34-399.92,692.08v386.72c444.73-278.66,722.66-759.86,741.83-1284.3l-341.91,205.5Z",
            }
            path {
                d: "M741.82,1279.04c-241.17-148.75-391.48-408.88-399.92-692.08L0,381.46c19.17,524.44,297.1,1005.64,741.82,1284.3v-386.72Z"
            }
        }
    }
}

#[component]
pub fn CogIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "currentColor",
            class: "{class}",
            path {
                fill_rule: "evenodd",
                clip_rule: "evenodd",
                d: "M11.078 2.25c-.917 0-1.699.663-1.85 1.567L9.05 4.889c-.02.12-.115.26-.297.348a7.493 7.493 0 0 0-.986.57c-.166.115-.334.126-.45.083L6.3 5.508a1.875 1.875 0 0 0-2.282.819l-.922 1.597a1.875 1.875 0 0 0 .432 2.385l.84.692c.095.078.17.229.154.43a7.598 7.598 0 0 0 0 1.139c.015.2-.059.352-.153.43l-.841.692a1.875 1.875 0 0 0-.432 2.385l.922 1.597a1.875 1.875 0 0 0 2.282.818l1.019-.382c.115-.043.283-.031.45.082.312.214.641.405.985.57.182.088.277.228.297.35l.178 1.071c.151.904.933 1.567 1.85 1.567h1.844c.916 0 1.699-.663 1.85-1.567l.178-1.072c.02-.12.114-.26.297-.349.344-.165.673-.356.985-.57.167-.114.335-.125.45-.082l1.02.382a1.875 1.875 0 0 0 2.28-.819l.923-1.597a1.875 1.875 0 0 0-.432-2.385l-.84-.692c-.095-.078-.17-.229-.154-.43a7.614 7.614 0 0 0 0-1.139c-.016-.2.059-.352.153-.43l.84-.692c.708-.582.891-1.59.433-2.385l-.922-1.597a1.875 1.875 0 0 0-2.282-.818l-1.02.382c-.114.043-.282.031-.449-.083a7.49 7.49 0 0 0-.985-.57c-.183-.087-.277-.227-.297-.348l-.179-1.072a1.875 1.875 0 0 0-1.85-1.567h-1.843ZM12 15.75a3.75 3.75 0 1 0 0-7.5 3.75 3.75 0 0 0 0 7.5Z"
            }
        }
    }
}

#[component]
pub fn DexscreenIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 252 300",
            fill: "currentColor",
            fill_rule: "evenodd",
            class: "{class}",
            path {
                d: "M151.818 106.866c9.177-4.576 20.854-11.312 32.545-20.541 2.465 5.119 2.735 9.586 1.465 13.193-.9 2.542-2.596 4.753-4.826 6.512-2.415 1.901-5.431 3.285-8.765 4.033-6.326 1.425-13.712.593-20.419-3.197m1.591 46.886l12.148 7.017c-24.804 13.902-31.547 39.716-39.557 64.859-8.009-25.143-14.753-50.957-39.556-64.859l12.148-7.017a5.95 5.95 0 003.84-5.845c-1.113-23.547 5.245-33.96 13.821-40.498 3.076-2.342 6.434-3.518 9.747-3.518s6.671 1.176 9.748 3.518c8.576 6.538 14.934 16.951 13.821 40.498a5.95 5.95 0 003.84 5.845zM126 0c14.042.377 28.119 3.103 40.336 8.406 8.46 3.677 16.354 8.534 23.502 14.342 3.228 2.622 5.886 5.155 8.814 8.071 7.897.273 19.438-8.5 24.796-16.709-9.221 30.23-51.299 65.929-80.43 79.589-.012-.005-.02-.012-.029-.018-5.228-3.992-11.108-5.988-16.989-5.988s-11.76 1.996-16.988 5.988c-.009.005-.017.014-.029.018-29.132-13.66-71.209-49.359-80.43-79.589 5.357 8.209 16.898 16.982 24.795 16.709 2.929-2.915 5.587-5.449 8.814-8.071C69.31 16.94 77.204 12.083 85.664 8.406 97.882 3.103 111.959.377 126 0m-25.818 106.866c-9.176-4.576-20.854-11.312-32.544-20.541-2.465 5.119-2.735 9.586-1.466 13.193.901 2.542 2.597 4.753 4.826 6.512 2.416 1.901 5.432 3.285 8.766 4.033 6.326 1.425 13.711.593 20.418-3.197"
            }
            path {
                d: "M197.167 75.016c6.436-6.495 12.107-13.684 16.667-20.099l2.316 4.359c7.456 14.917 11.33 29.774 11.33 46.494l-.016 26.532.14 13.754c.54 33.766 7.846 67.929 24.396 99.193l-34.627-27.922-24.501 39.759-25.74-24.231L126 299.604l-41.132-66.748-25.739 24.231-24.501-39.759L0 245.25c16.55-31.264 23.856-65.427 24.397-99.193l.14-13.754-.016-26.532c0-16.721 3.873-31.578 11.331-46.494l2.315-4.359c4.56 6.415 10.23 13.603 16.667 20.099l-2.01 4.175c-3.905 8.109-5.198 17.176-2.156 25.799 1.961 5.554 5.54 10.317 10.154 13.953 4.48 3.531 9.782 5.911 15.333 7.161 3.616.814 7.3 1.149 10.96 1.035-.854 4.841-1.227 9.862-1.251 14.978L53.2 160.984l25.206 14.129a41.926 41.926 0 015.734 3.869c20.781 18.658 33.275 73.855 41.861 100.816 8.587-26.961 21.08-82.158 41.862-100.816a41.865 41.865 0 015.734-3.869l25.206-14.129-32.665-18.866c-.024-5.116-.397-10.137-1.251-14.978 3.66.114 7.344-.221 10.96-1.035 5.551-1.25 10.854-3.63 15.333-7.161 4.613-3.636 8.193-8.399 10.153-13.953 3.043-8.623 1.749-17.689-2.155-25.799l-2.01-4.175z"
            }
        }
    }
}

#[component]
pub fn BulbIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "none",
            stroke: "currentColor",
            stroke_width: "1.5",
            class: "{class}",
            path {
                stroke_linecap: "round",
                stroke_linejoin: "round",
                d: "M12 18v-5.25m0 0a6.01 6.01 0 0 0 1.5-.189m-1.5.189a6.01 6.01 0 0 1-1.5-.189m3.75 7.478a12.06 12.06 0 0 1-4.5 0m3.75 2.383a14.406 14.406 0 0 1-3 0M14.25 18v-.192c0-.983.658-1.823 1.508-2.316a7.5 7.5 0 1 0-7.517 0c.85.493 1.509 1.333 1.509 2.316V18"
            }
        }
    }
}

#[component]
pub fn QuestionCircleIcon(class: Option<String>) -> Element {
    let class = class.unwrap_or("".to_string());
    rsx! {
        svg {
            view_box: "0 0 24 24",
            fill: "none",
            stroke: "currentColor",
            stroke_width: "1.5",
            class: "{class}",
            path {
                stroke_linecap: "round",
                stroke_linejoin: "round",
                d: "M9.879 7.519c1.171-1.025 3.071-1.025 4.242 0 1.172 1.025 1.172 2.687 0 3.712-.203.179-.43.326-.67.442-.745.361-1.45.999-1.45 1.827v.75M21 12a9 9 0 1 1-18 0 9 9 0 0 1 18 0Zm-9 5.25h.008v.008H12v-.008Z"
            }
        }
    }
}
